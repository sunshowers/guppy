searchState.loadedDescShard("guppy_cmdlib", 0, "Support for CLI operations with guppy, with structopt …\nContext for invoking the <code>cargo metadata</code> command.\nSupport for options like the Cargo resolver version.\nSupport for packages and features.\nReturns the absolute canonical manifest path.\nActivate all available features\nReturns the current directory.\nList of features to activate across all packages\nPackages that take part in feature unification but aren’…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInclude dev-dependencies of initial packages (default: …\nInclude initial proc-macros on target platform (default: …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nEvaluates this struct and creates a <code>MetadataCommand</code>.\nEvaluates this struct against the given graph, and …\nPath to Cargo.toml\nDo not activate the <code>default</code> feature\nPackages to start the query from (default: entire …\nProptest support.\nCargo resolver version to use\nParse a given triple, the string “current”, or “any…\nConverts to guppy’s CargoResolverVersion.\nConverts to guppy’s InitialsPlatform.\nGenerates a random, known target triple that can be …")