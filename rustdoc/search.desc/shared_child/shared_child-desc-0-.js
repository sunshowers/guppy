searchState.loadedDescShard("shared_child", 0, "A library for awaiting and killing child processes from …\nReturns the argument unchanged.\nReturn the child process ID.\nCalls <code>U::from(self)</code>.\nConsume the <code>SharedChild</code> and return the <code>std::process::Child</code> …\nSend a kill signal to the child. On Unix this sends …\nConstruct a new <code>SharedChild</code> from an already spawned …\nSpawn a new <code>SharedChild</code> from a <code>std::process::Command</code>.\nTake the child’s <code>stderr</code> handle, if any.\nTake the child’s <code>stdin</code> handle, if any.\nTake the child’s <code>stdout</code> handle, if any.\nReturn the child’s exit status if it has already exited. …\nUnix-only extensions, for sending signals.\nWait for the child to exit, blocking the current thread, …\nSend a signal to the child process with <code>libc::kill</code>. If the …")