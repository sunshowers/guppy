searchState.loadedDescShard("fixtures", 0, "Test fixtures for guppy.\nHelper for creating <code>PackageId</code> instances in test code.\nSome of the messages are different based on whether we’…\nAssert that links are presented in the expected order.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThis captures metadata fields that are relevant for tests. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns true if the deps for this package are available to …\nReturns true if the reverse deps for this package are …\nReturns true if the transitive deps for this package are …\nReturns true if the transitive reverse deps for this …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the absolute path of this fixture.\nLookup a fixture by name, or <code>None</code> if the name wasn’t …\nReturns the test details for this fixture.\nReturns the argument unchanged.\nReturns the package graph for this fixture.\nCalls <code>U::from(self)</code>.\nReturns the unparsed JSON string for this fixture.\nReturns the name of this fixture.\nVerifies that the parsed metadata matches known details.\nReturns the path of this fixture, relative to the …")