searchState.loadedDescShard("tabular", 0, "Builds plain, automatically-aligned tables of monospaced …\nDid not understand the column specifiier.\nContains the error value\nErrors from parsing the table format string.\nContains the success value\nType alias specializing <code>std::result::Result</code> with this …\nType for building a <code>Table</code> row.\nBuilder type for constructing a formatted table.\nEncountered a <code>{</code> character without matching <code>}</code>.\nEncountered a character unexpected inside a column …\nEncountered a <code>}</code> character without a prior matching <code>{</code> …\nAdds a cell to this table row with a custom width.\nAdds a cell to this table row.\nAdds a cell to this table row with a custom width.\nAdds a pre-formatted row that spans all columns.\nAdds a row made up of cells.\nThe number of columns in the table.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBuilds a row from an iterator over strings.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the row is empty\nThe number of cells in this row.\nMakes a new, empty table row.\nConstructs a new table with the format of each row …\nLike <code>new</code>, but returns a <code>Result</code> instead of panicking if …\nA macro for building a <code>Row</code>.\nSets the string to output at the end of every line.\nA macro for building a <code>Table</code>.\nAdds a cell to this table row after stripping ANSI escape …\nAdds a cell to this table row.\nAdds a cell to this table row with a custom width.\nConvenience function for calling <code>add_heading</code>.\nConvenience function for calling <code>add_row</code>.")